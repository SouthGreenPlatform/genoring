# GenoRing docker compose file
#
# Run with "docker compose up" or "docker compose up -d"
# Stop with "docker compose down"
#
# Requires Docker compose version >= 3.4
#
# Access through "http://localhost:8080"
#

services:

  genoring:
    # image: guignon/genoring:alpha2
    image: genoring
    container_name: genoring
    env_file:
      - './env/genoring.env'
    volumes:
      - genoring-drupal-volume:/opt/drupal
      - genoring-data-volume:/data
    depends_on:
      - db
    restart: unless-stopped

  proxy:
    image: nginx
    container_name: genoring-http
    env_file:
      - './env/nginx.env'
    ports:
      - 8080:80
    volumes:
      - type: bind
        source: ${PWD}/proxy/genoring-fpm.conf
        target: /etc/nginx/templates/default.conf.template
      - type: bind
        source: ${PWD}/proxy/init.html
        target: /var/www/html/init.html
      - ${PWD}/proxy/extensions:/etc/nginx/genoring
      - genoring-drupal-volume:/opt/drupal
      - genoring-data-volume:/data
    depends_on:
      - genoring
    restart: always

  db:
    image: postgres:15
    container_name: genoring-db
    env_file:
      - './env/genoring.env'
    volumes:
      - ${PWD}/volumes/db/pgdata:/var/lib/postgresql/data
      - genoring-data-volume:/data
    restart: always

  gigwa:
    profiles: ["gigwa"]
    image: guilhemsempere/gigwa:2.8-RELEASE
    container_name: genoring-gigwa
    env_file:
      - './env/gigwa.env'
    ports:
      - 8123:8080
    volumes:
      - genoring-data-volume:/data
      # - ${PWD}/volumes/gigwa:/usr/local/tomcat/config
    depends_on:
      - mongo
    restart: unless-stopped

  mongo:
    profiles: ["gigwa"]
    image: mongo:4.2.24
    container_name: genoring-mongodb
    env_file:
      - './env/gigwa.env'
    command: --profile 0 --slowms 60000 --storageEngine wiredTiger --wiredTigerCollectionBlockCompressor=zstd --directoryperdb --quiet
    ports:
      - 59393:27017 # You may amend the external port only (left hand side), which must match the above MONGO_PORT
    volumes:
      - genoring-data-volume:/data
      # - ${PWD}/volumes/mongo:/data/db
    restart: always

  jbrowse2:
    profiles: ["jbrowse2"]
    image: genoring-jbrowse2
    container_name: genoring-jbrowse2
    env_file:
      - './env/jbrowse2.env'
    ports:
      - 8124:8080
    restart: unless-stopped
    volumes:
      - genoring-data-volume:/data

volumes:
  genoring-drupal-volume:
    name: "genoring-drupal"
    driver_opts:
      type: none
      device: ${PWD}/volumes/drupal
      o: bind
  genoring-data-volume:
    name: "genoring-data"
    driver_opts:
      type: none
      device: ${PWD}/volumes/data
      o: bind
